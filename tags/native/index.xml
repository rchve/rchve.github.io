<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Native on rchve</title><link>https://rchve.github.io/tags/native/</link><description>rchve (Native)</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 18 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://rchve.github.io/tags/native/index.xml" rel="self" type="application/rss+xml"/><item><title>Quarkus for Spin - Part 2</title><link>https://rchve.github.io/post/quarkus-for-spin-2/</link><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid>https://rchve.github.io/post/quarkus-for-spin-2/</guid><description>&lt;p>In this post we will be enhancing from the &lt;a href="https://rchve.github.io/post/quarkus-for-spin-1/">Part 1&lt;/a> to add new functionality using quarkus extensions. We will add a watch command to the application that watches a folder for file events and process to identify the type of file.&lt;/p>
&lt;p>In order to implement the above functionality we will use the following&lt;/p>
&lt;ul>
&lt;li>quarkus picocli to add subcommand &amp;ldquo;watch&amp;rdquo;&lt;/li>
&lt;li>quarkus camel integration to watch for file events and react on them&lt;/li>
&lt;li>quarkus tika to process a file and determine its mine type&lt;/li>
&lt;/ul>
&lt;p>We will be starting from the code at branch &lt;a href="https://github.com/rchve/qlearn/tree/step-01">step-01&lt;/a>&lt;/p>
&lt;h4 id="adding-subcommand">Adding subcommand&lt;/h4>
&lt;p>To add a new subcommand create a new Java class for command and add Picocli annoations that will be discovered when run as quarkus application&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">import&lt;/span> picocli.CommandLine&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#a6e22e">@CommandLine.Command&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;watch&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
mixinStandardHelpOptions &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
description &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Watches a path for file changes.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">WatchCommand&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Runnable &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@CommandLine.Option&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
names &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-p&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;--path&amp;#34;&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
description &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Path to watch.&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
defaultValue &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
String path&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Watch command fired ...&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The @CommandLine.Command annotation on the class defines the subcommand with name as &amp;ldquo;watch&amp;rdquo;. As the command needs to accept the path to monitor this is added and an option to the command using the @CommandLoine.Option annotation. The run function is executed whenever the command is run.&lt;/p>
&lt;h5 id="building-and-running">Building and running&lt;/h5>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">./mvnw clean package
java -jar target/qlearn-1.0.0-runner.jar watch
Watch command fired ...
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="adding-support-to-listen-to-file-events">Adding support to listen to file events&lt;/h4>
&lt;p>The quarkus camel integration have &lt;a href="https://camel.apache.org/camel-quarkus/latest/extensions/file-watch.html">file watch component&lt;/a> that can be used to monitor and perform action on file events. Guide for camel quarkus integration is available &lt;a href="https://camel.apache.org/camel-quarkus/latest/">here&lt;/a>.&lt;/p>
&lt;p>Quarkus looks for @ApplicationScoped RouteBuilder and will setup the route and start it. However for our case we want to setup camel route for the watch command only. This can be achieved by configuring the routes to the CamelContext provided by Quarkus.&lt;/p>
&lt;p>Update to pom.xml to add the dependencyManagment and dependencies.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml"> &lt;span style="color:#f92672">&amp;lt;dependencyManagement&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.camel.quarkus&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>camel-quarkus-bom&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0.0-CR2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;type&amp;gt;&lt;/span>pom&lt;span style="color:#f92672">&amp;lt;/type&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>import&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/dependencyManagement&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.camel.quarkus&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>camel-quarkus-file-watch&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the WatchCommand class to setup the camel route to monitor and listen for messages&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">import&lt;/span> io.quarkus.runtime.Quarkus&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.CamelContext&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.builder.endpoint.EndpointRouteBuilder&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> picocli.CommandLine&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#a6e22e">@CommandLine.Command&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;watch&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
mixinStandardHelpOptions &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
description &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Watches a path for file changes.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">WatchCommand&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Runnable &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@CommandLine.Option&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
names &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-p&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;--path&amp;#34;&lt;/span>&lt;span style="color:#f92672">},&lt;/span>
description &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Path to watch.&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
defaultValue &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
String path&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> CamelContext ctx&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> FileProcessor processor&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">WatchCommand&lt;/span>&lt;span style="color:#f92672">(&lt;/span>CamelContext ctx&lt;span style="color:#f92672">,&lt;/span> FileProcessor processor&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#f92672">=&lt;/span> ctx&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">processor&lt;/span> &lt;span style="color:#f92672">=&lt;/span> processor&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Configuring Watches ... &amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
ctx&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">addRoutes&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
&lt;span style="color:#66d9ef">new&lt;/span> EndpointRouteBuilder&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">configure&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
from&lt;span style="color:#f92672">(&lt;/span>fileWatch&lt;span style="color:#f92672">(&lt;/span>path&lt;span style="color:#f92672">)).&lt;/span>&lt;span style="color:#a6e22e">process&lt;/span>&lt;span style="color:#f92672">(&lt;/span>processor&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">});&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Waiting for file changes ... Press Ctrl+C to exit.&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
Quarkus&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">waitForExit&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Exception e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">err&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Unable to setup watch&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">exit&lt;/span>&lt;span style="color:#f92672">(-&lt;/span>1&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above code injects the CamelContext and FileProcessor to the watch command and the setup the camel route to monitor path and process any event using the FileProcessor.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.Exchange&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.Processor&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.component.file.watch.FileWatchComponent&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.component.file.watch.constants.FileEventEnum&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.enterprise.context.ApplicationScoped&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#a6e22e">@ApplicationScoped&lt;/span>
&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FileProcessor&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Processor &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">process&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Exchange exchange&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;----------------------------------------------------&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> String path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span> exchange&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getMessage&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Exchange&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">FILE_PATH&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> FileEventEnum eventType &lt;span style="color:#f92672">=&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>FileEventEnum&lt;span style="color:#f92672">)&lt;/span> exchange&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getMessage&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>FileWatchComponent&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">EVENT_TYPE_HEADER&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;File %s was %s.&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> path&lt;span style="color:#f92672">,&lt;/span> eventType&lt;span style="color:#f92672">));&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;----------------------------------------------------\n&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above file processor just logs the file and event type.&lt;/p>
&lt;h5 id="building-and-running-1">Building and running&lt;/h5>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">./mvnw clean package
java -jar target/qlearn-1.0.0-runner.jar watch -p &lt;span style="color:#e6db74">&amp;#34;./tmp&amp;#34;&lt;/span>
Configuring Watches ...
Waiting &lt;span style="color:#66d9ef">for&lt;/span> file changes ... Press Ctrl+C to exit.
----------------------------------------------------
File /Users/rahgupta19/.k/gh/qlearn/tmp/abc.txt was CREATE.
----------------------------------------------------
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above command monitor the &amp;ldquo;tmp&amp;rdquo; directory and processes file events using the camel routes.&lt;/p>
&lt;h4 id="identifying-the-file-type-using-apache-tika">Identifying the file type using Apache Tika&lt;/h4>
&lt;p>Quarkus Tika integration uses Apache Tika library to analyse context of the documents. We will use the quarkus-tika extension to parse the file contents using the FileProcessor and identify the Media Type of the document.&lt;/p>
&lt;p>Update the pom.xml to include the quarkus-tika dependency.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml"> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>io.quarkus&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>quarkus-tika&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the FileProcessor to parse the files received by Apache Camel and parse files using Apache Tika.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">import&lt;/span> io.quarkus.tika.TikaMetadata&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> io.quarkus.tika.TikaParser&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.Exchange&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.Processor&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.component.file.watch.FileWatchComponent&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.camel.component.file.watch.constants.FileEventEnum&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.tika.io.TikaInputStream&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.enterprise.context.ApplicationScoped&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> java.io.File&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> java.io.IOException&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#a6e22e">@ApplicationScoped&lt;/span>
&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FileProcessor&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Processor &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> TikaParser parser&lt;span style="color:#f92672">;&lt;/span>
FileProcessor&lt;span style="color:#f92672">(&lt;/span>TikaParser parser&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">parser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> parser&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">process&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Exchange exchange&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> IOException &lt;span style="color:#f92672">{&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;----------------------------------------------------&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> String path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span> exchange&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getMessage&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Exchange&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">FILE_PATH&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> FileEventEnum eventType &lt;span style="color:#f92672">=&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>FileEventEnum&lt;span style="color:#f92672">)&lt;/span> exchange&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getMessage&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>FileWatchComponent&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">EVENT_TYPE_HEADER&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;File %s was %s.&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> path&lt;span style="color:#f92672">,&lt;/span> eventType&lt;span style="color:#f92672">));&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> TikaMetadata metadata &lt;span style="color:#f92672">=&lt;/span> parser&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getMetadata&lt;/span>&lt;span style="color:#f92672">(&lt;/span>TikaInputStream&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> File&lt;span style="color:#f92672">(&lt;/span>path&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">toURI&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Content Type&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> metadata&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getValues&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Exchange&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">CONTENT_TYPE&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;----------------------------------------------------\n&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="building-and-running-2">Building and running&lt;/h5>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">./mvnw clean package
java -jar target/qlearn-1.0.0-runner.jar watch -p &lt;span style="color:#e6db74">&amp;#34;./tmp&amp;#34;&lt;/span>
Configuring Watches ...
Waiting &lt;span style="color:#66d9ef">for&lt;/span> file changes ... Press Ctrl+C to exit.
----------------------------------------------------
File /Users/rahgupta19/.k/gh/qlearn/tmp/abc.txt was CREATE.
Content Type&lt;span style="color:#f92672">[&lt;/span>text/plain; charset&lt;span style="color:#f92672">=&lt;/span>ISO-8859-1&lt;span style="color:#f92672">]&lt;/span>
----------------------------------------------------
----------------------------------------------------
File /Users/rahgupta19/.k/gh/qlearn/tmp was CREATE.
Content Type&lt;span style="color:#f92672">[&lt;/span>text/plain; charset&lt;span style="color:#f92672">=&lt;/span>ISO-8859-1&lt;span style="color:#f92672">]&lt;/span>
----------------------------------------------------
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="building-and-running-the-native">Building and running the native&lt;/h5>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">./mvnw clean package -Pnative
./target/qlearn-1.0.0-runner watch -p ./tmp
Configuring Watches ...
Waiting &lt;span style="color:#66d9ef">for&lt;/span> file changes ... Press Ctrl+C to exit.
----------------------------------------------------
File /Users/rahgupta19/.k/gh/qlearn/tmp/abc.txt was CREATE.
Content Type&lt;span style="color:#f92672">[&lt;/span>text/plain; charset&lt;span style="color:#f92672">=&lt;/span>ISO-8859-1&lt;span style="color:#f92672">]&lt;/span>
----------------------------------------------------
----------------------------------------------------
File /Users/rahgupta19/.k/gh/qlearn/tmp/abc.txt was MODIFY.
Content Type&lt;span style="color:#f92672">[&lt;/span>text/plain; charset&lt;span style="color:#f92672">=&lt;/span>ISO-8859-1&lt;span style="color:#f92672">]&lt;/span>
----------------------------------------------------
----------------------------------------------------
File /Users/rahgupta19/.k/gh/qlearn/tmp/1.png was CREATE.
Content Type&lt;span style="color:#f92672">[&lt;/span>image/png&lt;span style="color:#f92672">]&lt;/span>
----------------------------------------------------
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Trying out with different files and getting same functionality as cli application.&lt;/p>
&lt;p>The code for this step is available at &lt;a href="https://github.com/rchve/qlearn/tree/step-02">https://github.com/rchve/qlearn/tree/step-02&lt;/a>&lt;/p>
&lt;h5 id="references">References&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://quarkus.io/guides/picocli">Quarkus Picocli&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://camel.apache.org/camel-quarkus/latest/">Quarkus Camel&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://quarkus.io/guides/tika">Quarkus Tika&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Quarkus for Spin - Part 1</title><link>https://rchve.github.io/post/quarkus-for-spin-1/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://rchve.github.io/post/quarkus-for-spin-1/</guid><description>&lt;p>From some time i wanted to try out &lt;a href="https://quarkus.io/">Quarkus&lt;/a>. Starting with version 1.4 it bought the functionality of command line support. It was good time to start playing with Quarkus for learning and understanding the ecosystem along with native compilation.&lt;/p>
&lt;p>In this blog i will create a cli application using Quarkus picocli extension and natively compile to binary.&lt;/p>
&lt;h4 id="getting-started">Getting Started&lt;/h4>
&lt;p>A started project can be created from &lt;a href="https://code.quarkus.io/">code.quarkus.io&lt;/a> or using the command below&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">mvn io.quarkus:quarkus-maven-plugin:1.5.0.Final:create &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DprojectGroupId&lt;span style="color:#f92672">=&lt;/span>io.gh.rchve -DprojectArtifactId&lt;span style="color:#f92672">=&lt;/span>qlearn &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DprojectVersion&lt;span style="color:#f92672">=&lt;/span>1.0.0 -Dextensions&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;picocli&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DclassName&lt;span style="color:#f92672">=&lt;/span>io.gh.rchve.qlearn.Main
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delete the generated folder (src/test, src/main/docker).&lt;/p>
&lt;p>From pom.xml remove all dependencies except quarkus-picocli.&lt;/p>
&lt;h4 id="creating-top-level-command">Creating Top level command&lt;/h4>
&lt;p>Create class for Top level command&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">package&lt;/span> io.gh.rchve.qlearn.commands&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> io.quarkus.picocli.runtime.annotations.TopCommand&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> picocli.CommandLine&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#a6e22e">@TopCommand&lt;/span>
&lt;span style="color:#a6e22e">@CommandLine.Command&lt;/span>&lt;span style="color:#f92672">(&lt;/span>mixinStandardHelpOptions &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">,&lt;/span> version &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;1.0.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">QLearnCommand&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Runnable &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="build-and-run-the-command">Build and run the command&lt;/h4>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">./mvnw clean package
java -jar target/qlearn-1.0.0-runner.jar -h
__ ____ __ _____ ___ __ ____ ______
--/ __ &lt;span style="color:#ae81ff">\/&lt;/span> / / / _ | / _ &lt;span style="color:#ae81ff">\/&lt;/span> //_/ / / / __/
-/ /_/ / /_/ / __ |/ , _/ ,&amp;lt; / /_/ /&lt;span style="color:#ae81ff">\ \ &lt;/span>
--&lt;span style="color:#ae81ff">\_&lt;/span>__&lt;span style="color:#ae81ff">\_\_&lt;/span>___/_/ |_/_/|_/_/|_|&lt;span style="color:#ae81ff">\_&lt;/span>___/___/
2020-06-10 18:45:17,141 INFO &lt;span style="color:#f92672">[&lt;/span>io.quarkus&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">(&lt;/span>main&lt;span style="color:#f92672">)&lt;/span> qlearn 1.0.0 on JVM &lt;span style="color:#f92672">(&lt;/span>powered by Quarkus 1.5.0.Final&lt;span style="color:#f92672">)&lt;/span> started in 0.333s.
2020-06-10 18:45:17,162 INFO &lt;span style="color:#f92672">[&lt;/span>io.quarkus&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">(&lt;/span>main&lt;span style="color:#f92672">)&lt;/span> Profile prod activated.
2020-06-10 18:45:17,162 INFO &lt;span style="color:#f92672">[&lt;/span>io.quarkus&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">(&lt;/span>main&lt;span style="color:#f92672">)&lt;/span> Installed features: &lt;span style="color:#f92672">[&lt;/span>cdi, picocli&lt;span style="color:#f92672">]&lt;/span>
Usage: &amp;lt;main class&amp;gt; &lt;span style="color:#f92672">[&lt;/span>-hV&lt;span style="color:#f92672">]&lt;/span>
-h, --help Show this help message and exit.
-V, --version Print version information and exit.
2020-06-10 18:45:17,275 INFO &lt;span style="color:#f92672">[&lt;/span>io.quarkus&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">(&lt;/span>main&lt;span style="color:#f92672">)&lt;/span> qlearn stopped in 0.004s
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above run displays the Quarkus banner and info logs. To disable this add the following properties to application.properties&lt;/p>
&lt;pre>&lt;code class="language-properties" data-lang="properties">quarkus.banner.enabled=false
quarkus.log.level=ERROR
&lt;/code>&lt;/pre>&lt;p>Now build and run again.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">./mvnw clean package
java -jar target/qlearn-1.0.0-runner.jar -h
Usage: &amp;lt;main class&amp;gt; &lt;span style="color:#f92672">[&lt;/span>-hV&lt;span style="color:#f92672">]&lt;/span>
-h, --help Show this help message and exit.
-V, --version Print version information and exit.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output is similar to a cli application.&lt;/p>
&lt;h4 id="build-and-run-the-native">Build and run the native&lt;/h4>
&lt;p>Building a native image uses the &lt;a href="https://www.graalvm.org/">GraalVM&lt;/a> to convert the java application to native binary.&lt;/p>
&lt;p>Running the below command to create a binary of Quarkus Application.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">./mvnw clean package -Pnative
./target/qlearn-1.0.0-runner -h
Usage: &amp;lt;main class&amp;gt; &lt;span style="color:#f92672">[&lt;/span>-hV&lt;span style="color:#f92672">]&lt;/span>
-h, --help Show this help message and exit.
-V, --version Print version information and exit.
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="running-the-application-from-ide">Running the application from IDE&lt;/h4>
&lt;p>The Quarkus application generates the Main class that will be used when running the application. We can provide our own Main class to be able to run from IDE.&lt;/p>
&lt;p>All the below Main class&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">package&lt;/span> io.gh.rchve.qlearn&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> io.quarkus.runtime.Quarkus&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">QLearn&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
Quarkus&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">run&lt;/span>&lt;span style="color:#f92672">(&lt;/span>args&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we can run the application from the IDE.&lt;/p>
&lt;p>The code for this step is available at &lt;a href="https://github.com/rchve/qlearn/tree/step-01">https://github.com/rchve/qlearn/tree/step-01&lt;/a>&lt;/p>
&lt;h4 id="next-steps">Next Steps&lt;/h4>
&lt;p>Add sub commands to the application.&lt;/p>
&lt;h5 id="references">References&lt;/h5>
&lt;ul>
&lt;li>&lt;a href="https://quarkus.io/guides/picocli">Quarkus Picocli&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>